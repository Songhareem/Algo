// 문제 설명
// 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 
// 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 
// 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 
// 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 
// 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.

// 전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 
// 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

// 제한사항
// 전체 학생의 수는 2명 이상 30명 이하입니다.
// 체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
// 여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
// 여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
// 여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.
//
// 입출력 예
// n	lost	reserve	return
// 5	[2, 4]	[1, 3, 5]	5
// 5	[2, 4]	[3]	        4
// 3	[3]	    [1]	        2
// 5    [2,3,4] [1,2,3]     4       5번 테스트 케이스
// 5    [1,2,3] [2,3,4]     4       12번 테스트 케이스 
//
// 입출력 예 설명
// 예제 #1
// 1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.

// 예제 #2
// 3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.

// 배운점
// 1. splice를 사용한 for문중 element 삭제
// 2. 문제의 해결을 위해, 순차적으로 해결해야하는 조건이 없는지 생각하기
//    (해당 문제의 경우, 잃어버린 번호와 여벌의 번호가 같을 경우, 먼저 제거해줘야 함)
function solution(n, lost, reserve) {
    var answer = 0;

    for(var i = reserve.length; i--;) {
        for(var j = lost.length; j--;) {
            if(lost[j] == reserve[i]){
                reserve.splice(i, 1);
                lost.splice(j, 1);
            }
        }
    }

    for(var i = reserve.length; i--;) {
        for(var j = lost.length; j--;) {
            if(lost[j] == reserve[i]-1) {
                reserve.splice(i, 1);
                lost.splice(j, 1);
            } else if(lost[j] == reserve[i]+1) {
                reserve.splice(i, 1);
                lost.splice(j, 1);
            }
        }
    }

    console.log(lost);
    console.log(reserve);
    answer = n-lost.length;
    return answer;
}

var n=5;
var lost=[1,2,3];
var reserve=[2,3,4];

console.log(solution(n,lost,reserve));